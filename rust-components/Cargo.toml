[package]
name = "cmdshiftai-core"
version = "1.0.0"
authors = ["cmdshiftAI Team"]
edition = "2021"
license = "MIT"
description = "High-performance Rust components for cmdshiftAI editor"

[lib]
crate-type = ["cdylib"]
name = "cmdshiftai_core"

[dependencies]
# N-API bindings for Node.js integration
napi = { version = "2", features = ["async", "napi8"] }
napi-derive = "2"

# Async runtime
tokio = { version = "1", features = ["full"] }

# File operations
tokio-util = { version = "0.7", features = ["io"] }
memmap2 = "0.9"

# Performance monitoring
metrics = "0.22"
metrics-exporter-prometheus = "0.13"

# Concurrent data structures
dashmap = "5"
parking_lot = "0.12"
lazy_static = "1.4"

# Additional dependencies
num_cpus = "1.16"
uuid = { version = "1", features = ["v4"] }
memory-stats = "1.1"

# Search functionality
regex = "1"
rayon = "1.8"
walkdir = "2"
ignore = "0.4"
grep = "0.3"
ripgrep = "14"

# Serialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# Error handling
thiserror = "1"
anyhow = "1"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Platform-specific optimizations
[target.'cfg(windows)'.dependencies]
windows = { version = "0.52", features = ["Win32_Storage_FileSystem", "Win32_System_IO"] }

[target.'cfg(unix)'.dependencies]
libc = "0.2"

[build-dependencies]
napi-build = "2"

[profile.release]
# Optimize for speed
opt-level = 3
lto = true
codegen-units = 1
strip = true
panic = "abort"

[profile.dev]
# Balance between compile time and runtime performance
opt-level = 2

[workspace]
members = [
    ".",
]